n = int(input())
k = int(input())
graph=[[0]*n for _ in range(n)]

for i in range(k) :
    a,b = map(int,input().split())
    graph[a-1][b-1] = 2

l = int(input())
direction=[]
index=0
for i in range(l):
    x, c = input().split()
    x=int(x)
    direction.append((x,c))

snake = []
snake.append((0,0))

dx=[0,1,0,-1]
dy=[1,0,-1,0]
graph[0][0] =1

x, y = 0, 0
def turn(d):
    global index
    if d == "D" :
        index +=1
        if index == 4 :
            index = 0
    else : 
        index -= 1
        if index == -1 :
            index = 4
        
time=0
dir=0
while True :
    time +=1
    nx = x + dx[index]
    ny = y + dy[index]
    if nx <= -1 or nx >=n or ny <= -1 or ny >= n or graph[nx][ny] == 1 :
        break
    snake.append((nx,ny))
    if graph[nx][ny] == 0 :
        a,b = snake.pop(0)
        graph[a][b]=0
    graph[nx][ny]=1
    x=nx
    y=ny
    if dir < l and direction[dir][0] == time :
        turn(direction[dir][1])
        dir+=1

print(time)
