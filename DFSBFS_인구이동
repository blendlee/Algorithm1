
import copy
import sys

sys.setrecursionlimit(10**5)
input=sys.stdin.readline

n, l ,r = map(int,input().split())
graph=[]
for i in range(n):
    graph.append(list(map(int,input().split())))

dx=[1,0,-1,0]
dy=[0,-1,0,1]

def dfs(graph,x,y):
    for i in range(4):
        nx = x +dx[i]
        ny = y +dy[i]
        if 0 <= nx < n and 0 <= ny < n and l<=abs(graph[nx][ny]-graph[x][y])<=r :
            if visited[nx][ny] == False :
                visited[nx][ny] = True
                global move
                move+=graph[nx][ny]
                union.append((nx,ny))
                dfs(graph,nx,ny)

day=0
while True :
    day+=1
    visited=[[False]*n for _ in range(n)]
    array = copy.deepcopy(graph)
    for i in range(n):
        for j in range(n):
            if visited[i][j] == False :
                visited[i][j] = True
                union = [(i,j)]
                move=graph[i][j]
                dfs(graph,i,j)
                if len(union) == 1 :
                    continue
                for x,y, in union :
                    array[x][y] = move // len(union)
    if graph==array :
        break
    else : 
        graph = array

print(day-1)
