from itertools import combinations
import copy

n=int(input())
graph=[]
for i in range(n) :
    graph.append(list(input().split()))

teacher=[]
empty=[]
for i in range(n):
    for j in range(n):
        if graph[i][j] == "T" :
            teacher.append((i,j))
        if graph[i][j] == "X":
            empty.append((i,j))

dx=[1,0,-1,0]
dy=[0,1,0,-1]

def check(graph):
    for x, y in teacher :
        for i in range(4) :
            for j in range(1,n):
                nx= x+dx[i]*j
                ny= y+dy[i]*j
                if nx >=n or nx <=-1 or ny>=n or ny <= -1 :
                    continue
                if graph[nx][ny]=="O" :
                    break
                if graph[nx][ny] == "S" :
                    return False
    return True


def find():
    for object in combinations(empty,3) :
        array= copy.deepcopy(graph)
        for x, y in object :
            array[x][y] = "O"
        if check(array) :
            return True
    return False


if find() :
    print("YES")
else :
    print("NO")
